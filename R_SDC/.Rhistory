rnorm(300)
hist(300)
hist(rnorm(300))
source('~/.active-rstudio-document', echo=TRUE)
!TRUE #  ! negacion
is.TRUE(TRUE)
isTRUE(TRUE)
a = 10
b = 20
c <- 30
40 -> d
50 = e #Inválido
f = 60 ; 70 -> g ; h <- 80
a == 10
a == 10
a = 10
rm(a)
v1 = c(2, 4, 6)
v1
v3 = seq(from=1, to=20, by=3)
v3
v4 = seq(from=1, to=20, length=7)
v4
v4[2] - v4[1] #Indexación
v4[7] - v4[6]
round(v4, 1)
v4
v4 = round(v4, 1)
v4
v6 = c(1:5)
v6
v7 = c(6:10)
v7
v8 = c(6:11)
v8
v6 + v7
v6 + v8
v9 = c(v8, NA) # not available
v9
sum(v9)
mean(v9)
sum(v9, na.rm = T)
mean(v9, na.rm = T)
v9
# ?cuales son los valores NA?
v10 = is.na(v9)
v10
is.na(c(0, 0, 1, 1))
is.integer(v8)
b <- a = 1
a <- c(0, 0, 1, 1)
b <- a = 1
b <- a == 1
b
v11 = round(seq(from=1000,to=10000,length=100),1)
v11
vl = v11 >= 5000 & v11 <= 8000
vl
table(vl) #Tabla de frecuencias
print(is.numeric(i))
for (i in 1:length(v8)){
print(is.numeric(i))
}
v11 = round(seq(from=1000,to=10000,length=100),1)
v11
vl = v11 >= 5000 & v11 <= 8000
vl
table(vl) #Tabla de frecuencias
v8 = c(6:11)
v9 = c(v8, NA) # not available
v9
v5 = rep(10, 5) #rep <- 10 se repite 5 veces
a = c("Jose", "Victorio", "Gonzales")
a <- c("Jose", "Victorio", "Gonzales")
b <- rep("Jose", 10)
a &b
vc1 = paste(c("Prod"), 1:10, sep = "")
vc1
vc1_1 <- paste(c("Muestra"), 1:5, sep = " ")
vc1_1
v6 = c(1:5)
paste(c("caleb", "terrel"), v6, sep = "-")
v7 = c(6:10)
v8 = c(6:11)
paste(v6, v7, sep = "-")
vc3 = paste(c("Prod"), 1:10, sep = "-", collapse = "/")
vc3
alumno = c("jose", "victorio", "gonzales")
alumno
nchar(alumno)
tolower(alumno)
alumno = c("Jose", "Victorio", "Gonzales")
alumno
tolower(alumno) #Minusculas
toupper(alumno) #Mayusculas
chartr("a", "8", alumno)
substr(alumno, 2, 4)
substr(alumno, 1:3, 1:3)
substr(alumno, 1:4, 1:3)
substr(alumno, 1:2, 1:3)
substr(alumno, 1:3, 1:3)
substr(alumno, 2, 4)
c1 = c("hoy", "almorce", "chaufa")
c2 = c("hoy", "almorce", "arroz con pollo")
c3 = c("papa a la huancaina", "ma?ana", "almorce")
c1
c1
c2
c3
v12 = c(10:20, NA, 40:50, NA)
v12
v12
is.na(v12)
!is.na(v12)
v12[!is.na(v12)]
v13 = c(25, 2000, 5000, 0.7)
v13
v12_1 <- seq(10, 50, by = 2)
v12_1
v12_1[v12_1 >= 35]
v12_1 >= 35
v12_2 <- c(2, 4, 6, NA)
mean(v12_2)
mean(v12_2, na.rm = T)
v13 = c(25, 2000, 5000, 0.7)
v13
names(v13) = c("edad", "ingresos", "deudas", "score")
v13
mode(v13)
matrix(1:15, nrow = 3, ncol = 4)
library(readxl)
set.seed(123)
m5 = matrix(rpois(16,5), 4, 4)
m5
det(m5)
library(MASS)
ginv(m5)  # matriz inversa
eigen(m5)
id = 1:10
id
nivel_educ = paste("educ", 1:10, sep="-")
nivel_educ
id = 1:10
id
nivel_educ = c(rep('tecnico',3), rep('universitario',7))
nivel_educ
salario = rpois(10, 1500)
salario
df = data.frame(id, nivel_educ, salario)
df
str(df)
viaje_extranjero = rep('si',10)
viaje_extranjero
df = data.frame(df, viaje_extranjero)
df
id = 1:10
id
nivel_educ = c(rep('tecnico',3), rep('universitario',7))
nivel_educ
salario = rpois(10, 1500)
salario
df = data.frame(id, nivel_educ, salario)
df
viaje_extranjero = rep('si',10)
viaje_extranjero
df = data.frame(df, viaje_extranjero)
df
viaje_extranjero = rep('si',4)
viaje_extranjero
df = data.frame(df, viaje_extranjero)
df
id = 1:10
id
nivel_educ = c(rep('tecnico',3), rep('universitario',7))
nivel_educ
salario = rpois(10, 1500)
salario
df = data.frame(id, nivel_educ, salario)
df
viaje_extranjero = rep('si',4)
viaje_extranjero
df = data.frame(df, viaje_extranjero)
df
library(tibble)
salario = rpois(10, 1500)
salario
df2 = data_frame(id, nivel_educ, salario)  # tibble()
df2
genero = c(rep(1,5), rep(2,5))
genero
df = data.frame(df, genero)
df
df = data_frame(df, genero)
df
df = data_frame(df, viaje_extranjero)
df
df = data.frame(df, viaje_extranjero)
df
df2 = data_frame(id, nivel_educ, salario)  # tibble()
df2
str(df2)
genero = c(rep(1,5), rep(2,5))
genero
df = data_frame(df, genero)
df = data.frame(df, genero)
df
df$genero = as.factor(df$genero)
str(df)
df
levels(df$genero) = c("hombre", "mujer")
id = 1:10
id
nivel_educ = c(rep('tecnico',3), rep('universitario',7))
nivel_educ
salario = rpois(10, 1500)
salario
df = data.frame(id, nivel_educ, salario)
df
viaje_extranjero = rep('si',4)
viaje_extranjero
df = data.frame(df, viaje_extranjero)
df
library(tibble)
df2 = data_frame(id, nivel_educ, salario)  # tibble()
df2
genero = c(rep(1,5), rep(2,5))
df = data.frame(df, genero)
df
df$genero = as.factor(df$genero)
levels(df$genero) = c("hombre", "mujer")
df
v1 = round(seq(from=15, to=50, length=20),1)
v1
m1 = matrix(rpois(20,5), nrow=5, ncol=4)
m1
df
lista_1 = list(v1, m1, df)
lista_1
length(lista_1) #N° de elementos de la lista
a = lista_1[2]
a
class(a) # ?realmente es una matriz?
a2 = lista_1[[2]]
a2
class(a2)
x = 6
if(x > 5){
y = TRUE
}
y
x = 4
if(x > 5){
y = TRUE
}
y
x = 4
if(x > 5){
y = TRUE
}
y
x = 0
if(x > 5){
y = TRUE
}
y
rm(y)
if(x > 5){
y = TRUE
}
y
x = 6
if(x > 5){
y = TRUE
}
y
rm(y)
x = 1
if(x > 5){
y = TRUE
}
y
x = 6
if(x > 5){
y = TRUE
}
y
x = matrix(1:6, 2, 3)
x
for(i in 1:nrow(x)){
for(j in 1:ncol(x)){
print(x[i,j])
}
}
x = matrix(1:6, 2, 3)
x
for(i in 1:nrow(x)){
for(j in 1:ncol(x)){
if(x[i, j] == valor){
indices = c(i, j)
print(indices)
}
}
}
valor = 6
for(i in 1:nrow(x)){
for(j in 1:ncol(x)){
if(x[i, j] == valor){
indices = c(i, j)
print(indices)
}
}
}
valor = 4
for(i in 1:nrow(x)){
for(j in 1:ncol(x)){
if(x[i, j] == valor){
indices = c(i, j)
print(indices)
}
}
}
set.seed(24)
#      n  mean  sd .. orden correcto de argumentos
rnorm(30 , 10  , 5)
rnorm(mean = 10, n = 30, sd = 5)
set.seed(24)
rnorm(mean = 10, n = 30, sd = 5)
funcion3 = function(a=3, b=6){
c = a*b
print(c)
}
funcion3()
funcion3(5, 10)
fun_cuad(1,3,1)
fun_cuad = function(a, b, c){
if(b^2-4*a*c == 0){
sol1 = -b/(2*a)
print(sol1)
} else if(b^2-4*a*c < 0){
print("la ecuacion no tiene sol. reales")
} else {
sol1 = (-b-sqrt(b^2-4*a*c))/(2*a)
sol2 = (-b+sqrt(b^2-4*a*c))/(2*a)
c(sol1, sol2)
}
}
fun_cuad(1,3,1)
